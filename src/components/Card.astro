---
import { baseUrl } from 'utils/functions';

const { title, color, portada, description, js, urlGithub, urlRepo } =
  Astro.props;
---

<div class='atropos my-atropos' data-anchor={urlRepo}>
  <div class='atropos-scale'>
    <div class='atropos-rotate'>
      <div class='atropos-inner'>
        <div class='card-container' style=`--color: ${color}`>
          <header class='title'>
            <div class='text'>
              <h1>Technologies</h1>
              <div class='icons'>
                {js && <div style='--icon-tech: var(--js);' class='icon' />}
                <div style='--icon-tech: var(--css);' class='icon'></div>
                <div style='--icon-tech: var(--html);' class='icon html'></div>
              </div>
            </div>
          </header>
          <div class='image-container'>
            <img
              loading='lazy'
              alt='Imagen de Datos hardcodeados'
              src={baseUrl(portada)}
            />
          </div>
          <header class='description'>
            <div class='text'>
              <h1>{title}</h1>
              <div class='icons'>
                <div class='icon' style='--shape: var(--code-icon)'></div>
              </div>
            </div>
          </header>
          <div class='description-container'>
            <p>{description}</p>
            <a href={urlRepo} class='num'>
              <aside class='logo-github'></aside>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('click', e => {
    const target = e.target as HTMLElement;
    if (target.matches('.my-atropos *') || target.matches('.my-atropos')) {
      const closestMyAtrops = target.closest('.my-atropos') as HTMLElement;
      const anchor = closestMyAtrops.getAttribute('data-anchor');
      if (anchor) window.open(anchor, '_blank');
    }
  });
</script>

<style>
  .my-atropos {
    --width: 29.95vmax;
    width: var(--width);
    zoom: 0.8;
    cursor: pointer;
  }

  @font-face {
    font-family: Jost;
    src: url(/assets/card/jost-vf.woff2) format('woff2');
    font-display: swap;
  }

  .card-container {
    --height: calc(var(--width) * 1.5);
    --border-size: calc(var(--width) / 19.5);
    --dark-color: color-mix(in srgb, var(--color), black 50%);
    --category-gradient: linear-gradient(
      var(--dark-color),
      var(--color),
      var(--dark-color)
    );
    width: var(--width);
    height: var(--height);
    background-image: var(--texture), linear-gradient(#141414, #141414);
    background-blend-mode: overlay, normal;
    background-clip: padding-box, border-box;
    border: var(--border-size) solid transparent;
    border-bottom-width: calc(var(--border-size) * 1.6);
    padding: var(--border-size);
    position: relative;
    display: inline-flex;
    flex-direction: column;

    &::before {
      --offset: calc(var(--border-size) * -1.5);
      content: '';
      border: 0.07vmax solid var(--color);
      display: block;
      position: absolute;
      width: calc(100% + var(--border-size));
      height: calc(100% + calc(var(--border-size) * 1.25));
      transform: translate(var(--offset), var(--offset));
      clip-path: polygon(
        0 0,
        100% 0,
        100% 100%,
        80% 100%,
        80% 90%,
        20% 90%,
        20% 100%,
        0 100%
      );
    }

    &::after {
      content: '';
      background-image: var(--noise);
      mix-blend-mode: overlay;
      inset: 0;
      display: block;
      position: absolute;
      pointer-events: none;
    }
  }

  .image-container,
  .description-container {
    --border-size: 0.2vmax;
    width: 88%;
    height: 55%;
    margin: 0 auto;
    background:
      linear-gradient(#010011, #010011) padding-box,
      var(--category-gradient) border-box;
    padding: var(--border-size);
    border: var(--border-size) solid transparent;
    display: grid;
    place-items: center;
    user-select: none;
    position: relative;
  }

  .image-container {
    margin-top: 4.56vmax;
  }

  img {
    top: 0.07vmax;
    left: 0.07vmax;
    width: calc(100% - 0.13vmax);
    height: calc(100% - 0.33vmax);
    object-fit: cover;
    object-position: center;
    position: absolute;
  }

  .description-container {
    height: 25%;
    display: grid;
    margin-top: 1.63vmax;
    position: relative;
    background:
      linear-gradient(#341d14, #1a0f0a) padding-box,
      var(--category-gradient) border-box;

    p {
      font-family: Jost, sans-serif;
      font-size: 1.35vmax;
      color: #ccc;
      padding: 0 1.04vmax !important;
    }
  }

  header {
    --shape: polygon(5% 0, 95% 0%, 100% 50%, 95% 100%, 5% 100%, 0% 50%);
    --gradient: linear-gradient(to right, #fff, #222 30%, #222 70%, #fff 100%);
    display: grid;
    place-items: center;
    width: 90%;
    background: var(--gradient);
    clip-path: var(--shape);
    box-sizing: border-box;
    position: absolute;
    z-index: 2;
    top: 0%;
    margin: unset;
    padding: unset;
    box-sizing: content-box;
    padding: 0.26vmax 0.9vmax;
    transform: translateY(0.52vmax);
    height: 3.51vmax;

    .text {
      display: grid;
      grid-template-columns: 1fr 6.51vmax;
      width: calc(100% - 0.39vmax);
      height: calc(100% - 0.39vmax);
      padding: 0.26vmax 1.04vmax;
      background: #1d1d1d;
      clip-path: var(--shape);
      align-content: center;

      h1 {
        margin: 0;
        font-family: Jost, sans-serif;
        font-size: 1.3vmax;
        color: #fff;
        background: linear-gradient(45deg, #ae8625, #f7ef8a, #d2ac47, #edc967);
        background-clip: text;
        -webkit-text-fill-color: transparent;
        padding: 0 1.04vmax !important;
      }

      .icons {
        width: 100%;
        height: 100%;
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        align-items: center;
        background: #0000;
        gap: 0.33vmax;
        translate: -0.5vmax;

        .icon {
          width: 2.08vmax;
          height: 2.08vmax;
          opacity: var(--opacity, 0.75);
          color: #fff;
          background-repeat: no-repeat;
          background-image: var(--icon-tech);
          background-position: center;
          background-size: cover;

          &.html {
            background-size: contain;
            translate: 0 0.07vmax;
            transform: scaleY(1.07);
          }

          &:nth-of-type(2) {
            translate: 0.07vmax;
          }
        }
      }
    }

    &.description {
      --gradient: linear-gradient(
        to right,
        #222,
        #fff5 15%,
        #fff 50%,
        #fff5 85%,
        #222
      );
      --shape: polygon(0 0, 100% 0, 97% 50%, 100% 100%, 0 100%, 3% 50%);
      --opacity: 1;

      top: initial;
      bottom: 32%;

      .text {
        grid-template-columns: 1fr 3.26vmax;
      }

      .icons .icon {
        clip-path: var(--shape);
        background-color: #edc967;
      }
    }
  }

  .num {
    --size: 1.69vmax;
    margin-right: 0.52vmax;
    border: 0.13vmax solid #fff;
    display: grid;
    place-items: center;
    justify-self: end;
    border-radius: 50%;
    font-weight: 800;
    color: #fff;
    background: #000;
    width: var(--size);
    height: var(--size);
    position: absolute;
    bottom: calc(var(--size) * -0.6);

    .logo-github {
      width: 70%;
      height: 70%;
      background-repeat: no-repeat;
      background-image: var(--github);
    }
  }
</style>
